name: Deploy to AWS EKS

on:
  push:
    branches:
      - main  # Runs when code is pushed to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend_recipe1:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend_recipe1:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend_recipe2:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend_recipe2:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set Environment Variables from GitHub Secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> $GITHUB_ENV

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster
          kubectl version --client

      - name: Deploy Backend and Frontend to EKS
        run: |
          # Apply Kubernetes deployments for backend and frontend
          kubectl apply -f dep-ser/backe.yml
          kubectl apply -f dep-ser/fb-dep.yml
          
          # Rollout restart for deployments to update with new images
          kubectl rollout restart deployment backend -n default
          kubectl rollout restart deployment frontend -n default

      - name: Verify Deployment
        run: |
          kubectl get pods -o wide
          kubectl get svc

# name: Deploy to AWS EKS

# on:
#   push:
#     branches:
#       - main  # Runs when code is pushed to main branch

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Login to Docker Hub
#         run: |
#           echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       - name: Build and Push Backend Image
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/backend_recipe1:latest ./backend
#           docker push ${{ secrets.DOCKER_USERNAME }}/backend_recipe1:latest

#       - name: Build and Push Frontend Image
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend_recipe2:latest ./frontend
#           docker push ${{ secrets.DOCKER_USERNAME }}/frontend_recipe2:latest

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Configure kubectl
#         run: |
#           aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster
#           kubectl version --client

#       - name: Deploy Application to EKS
#         run: |
#           kubectl apply -f dep-ser/backe.yml
#           kubectl apply -f dep-ser/fb-dep.yml
#           kubectl rollout restart deployment backend -n default
#           kubectl rollout restart deployment frontend -n default

#       - name: Verify Deployment
#         run: |
#           kubectl get pods -o wide
#           kubectl get svc
