name: Deploy to AWS EKS

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install Terraform
      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -fsSL https://releases.hashicorp.com/terraform/1.5.5/terraform_1.5.5_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform --version  # Verify Terraform installation

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Check if the EKS Cluster exists
      - name: Check if EKS Cluster Exists
        id: check-cluster
        run: |
          if aws eks describe-cluster --name my-eks-cluster --region us-east-1 > /dev/null 2>&1; then
            echo "Cluster exists"
            echo "CLUSTER_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Cluster does not exist"
            echo "CLUSTER_EXISTS=false" >> $GITHUB_ENV
          fi

      # Deploy EKS Cluster using Terraform (only if the cluster does not exist)
      - name: Deploy EKS Cluster with Terraform
        if: env.CLUSTER_EXISTS == 'false'
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      # Update kubeconfig to interact with EKS
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name my-eks-cluster --region us-east-1

      # Login to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Build and Push Backend Docker Image
      - name: Build and Push Backend Image
        run: |
          docker build -t backend_recipe2:latest -f backend/Dockerfile backend/
          docker tag backend_recipe2:latest ${{ secrets.DOCKER_HUB_USERNAME }}/backend_recipe2:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend_recipee2:latest

      # Build and Push Frontend Docker Image
      - name: Build and Push Frontend Image
        run: |
          docker build -t frontend_recipe2:latest -f frontend/Dockerfile frontend/
          docker tag frontend_recipe2:latest ${{ secrets.DOCKER_HUB_USERNAME }}/frontend_recipe2:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend_recipe2:latest

      # Deploy Kubernetes manifests
      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f dep-ser/backe.yml
          kubectl apply -f dep-ser/fb-dep.yml

