name: Deploy to AWS EKS using Terraform

on:
  push:
    branches:
      - main  # Change if needed
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Terraform Binary
        id: cache-terraform
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/terraform
          key: terraform-1.5.5

      - name: Install Terraform (if not cached)
        if: steps.cache-terraform.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -fsSL https://releases.hashicorp.com/terraform/1.5.5/terraform_1.5.5_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform --version  # Verify installation

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check if EKS Cluster Exists
        id: check_cluster
        run: |
          if aws eks describe-cluster --name my-eks-cluster --region us-east-1 > /dev/null 2>&1; then
            echo "CLUSTER_EXISTS=true" >> $GITHUB_ENV
          else
            echo "CLUSTER_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Deploy Infrastructure with Terraform
        if: env.CLUSTER_EXISTS == 'false'
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster
          kubectl get nodes

      - name: Deploy Application to EKS
        run: |
          kubectl apply -f dep-ser/backe.yml
          kubectl apply -f dep-ser/fb-dep.yml
          kubectl rollout status deployment frontend
          kubectl rollout status deployment backend

          
      - name: Verify Deployment
        run: |
          kubectl get all
