# # apiVersion: networking.k8s.io/v1
# # kind: Ingress
# # metadata:
# #   name: my-app-ingress
# #   namespace: default
# #   annotations:
# #     nginx.ingress.kubernetes.io/rewrite-target: /
# # spec:
# #   ingressClassName: nginx 
# #   rules:
# #     - host: my-app.example.com  # Replace with your domain
# #       http:
# #         paths:
# #           - path: /
# #             pathType: Prefix
# #             backend:
# #               service:
# #                 name: frontend  # Replace with your frontend service name
# #                 port:
# #                   number: 80
# #           # - path: /api
# #           #   pathType: Prefix
# #           #   backend:
# #           #     service:
# #           #       name: backend  # Replace with your backend service name
# #           #       port:
# #           #         number: 8000


  

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-app-ingress

#   annotations:
#     # nginx.ingress.kubernetes.io/rewrite-target: /
#     cert-manager.io/cluster-issuer: letsencrypt-prod
#     nginx.ingress.kubernetes.io/enable-cors: "true"
#     nginx.ingress.kubernetes.io/ssl-redirect: "true" 
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
# spec:
#   ingressClassName: nginx 
#   rules:
#     - host: ""
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: frontend
#                 port:
#                   number: 80

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-app-ingress
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-prod  # Automatic TLS certs
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"   # Force HTTPS
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/enable-cors: "true"    # CORS support
#     nginx.ingress.kubernetes.io/proxy-body-size: "10m"  # Adjust payload size
# spec:
#   ingressClassName: nginx
#   tls: 
#   - hosts:
#     - recipe.sigmoid.io
#     secretName: my-app-tls 
#   rules:
#   - host: ""
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: frontend
#             port:
#               number: 80


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod  # Automatic TLS certs
    nginx.ingress.kubernetes.io/ssl-redirect: "true"   # Force HTTPS
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"    # CORS support
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"  # Adjust payload size
spec:
  ingressClassName: nginx
  tls: 
  - hosts:
    - recipe.sigmoid.io
    secretName: my-app-tls 
  rules:
  - host: recipe.sigmoid.io  # Apply rules to the correct domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend  # Your frontend service
            port:
              number: 80
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: backend  # Your backend service
            port:
              number: 8000  # Backend should support HTTPS

